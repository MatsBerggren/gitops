apiVersion: v1
kind: Service
metadata:
  name: rmm-daphne
spec:
  selector: { app: rmm-daphne }
  ports:
    - name: http
      port: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmm-daphne
spec:
  replicas: 1
  selector:
    matchLabels: { app: rmm-daphne }
  template:
    metadata:
      labels: { app: rmm-daphne }
    spec:
      containers:
        - name: daphne
          image: ghcr.io/amidaware/tacticalrmm-daphne:latest
          envFrom:
            - configMapRef: { name: tactical-rmm-config }
            - secretRef: { name: tactical-rmm-secret }
          env:
            - name: DATABASE_URL
              value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
            - name: REDIS_URL
              value: "redis://$(REDIS_HOST):$(REDIS_PORT)/0"
          ports:
            - containerPort: 9000
          livenessProbe:
            tcpSocket: { port: 9000 }
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            tcpSocket: { port: 9000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
