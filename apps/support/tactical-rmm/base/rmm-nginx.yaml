apiVersion: v1
kind: Service
metadata:
  name: rmm-web
spec:
  selector: { app: rmm-nginx }
  ports:
    - name: http
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmm-nginx
spec:
  replicas: 1
  selector:
    matchLabels: { app: rmm-nginx }
  template:
    metadata:
      labels: { app: rmm-nginx }
    spec:
      imagePullSecrets:
        - name: ghcr-cred
      containers:
        - name: nginx
          image: ghcr.io/amidaware/tacticalrmm-nginx:latest
          envFrom:
            - configMapRef: { name: tactical-rmm-config }
          ports:
            - containerPort: 8080
          env:
            - name: BACKEND_HOST
              value: "rmm-api:8000"
            - name: DAPHNE_HOST
              value: "rmm-daphne:9000"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "512Mi"
