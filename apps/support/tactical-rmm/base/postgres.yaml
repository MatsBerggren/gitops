apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: trmm-postgres
spec:
  serviceName: trmm-postgres
  replicas: 1
  selector:
    matchLabels: { app: trmm-postgres }
  template:
    metadata:
      labels: { app: trmm-postgres }
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        env:
        - name: POSTGRES_DB
          value: "tacticalrmm"
        - name: POSTGRES_USER
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: POSTGRES_USER } }
        - name: POSTGRES_PASSWORD
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: POSTGRES_PASS } }
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports: [{ name: pg, containerPort: 5432 }]
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec: { command: ["sh","-c","pg_isready -U $POSTGRES_USER -d tacticalrmm -h 127.0.0.1 -p 5432"] }
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec: { command: ["sh","-c","pg_isready -U $POSTGRES_USER -d tacticalrmm -h 127.0.0.1 -p 5432"] }
          initialDelaySeconds: 20
          periodSeconds: 10
      volumes:
      - name: data
        persistentVolumeClaim: { claimName: trmm-postgres-pvc }
---
apiVersion: v1
kind: Service
metadata:
  name: trmm-postgres
spec:
  selector: { app: trmm-postgres }
  ports: [{ name: pg, port: 5432, targetPort: 5432 }]
