apiVersion: apps/v1
kind: Deployment
metadata:
  name: trmm-meshcentral
spec:
  replicas: 1
  selector:
    matchLabels: { app: trmm-meshcentral }
  template:
    metadata:
      labels: { app: trmm-meshcentral }
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: meshcentral
        image: docker.io/tacticalrmm/tactical-meshcentral:1.2.0
        env:
        - name: MESH_HOST
          valueFrom: { configMapKeyRef: { name: trmm-config, key: MESH_HOST } }
        - name: MESH_USER
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: MESH_USER } }
        - name: MESH_PASS
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: MESH_PASS } }
        - name: MONGODB_USER
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: MONGODB_USER } }
        - name: MONGODB_PASSWORD
          valueFrom: { secretKeyRef: { name: trmm-secrets, key: MONGODB_PASSWORD } }
        - name: MESH_PERSISTENT_CONFIG
          value: "0"
        ports:
        - { name: https, containerPort: 443 }
        volumeMounts:
        - { name: trmm-data, mountPath: /opt/tactical }
        - { name: mesh-data, mountPath: /home/node/app/meshcentral-data }
      volumes:
      - name: trmm-data
        persistentVolumeClaim: { claimName: trmm-data-pvc }
      - name: mesh-data
        persistentVolumeClaim: { claimName: trmm-mesh-data-pvc }
---
apiVersion: v1
kind: Service
metadata:
  name: trmm-meshcentral
spec:
  selector: { app: trmm-meshcentral }
  ports: [{ name: https, port: 443, targetPort: 443 }]
